generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  username String   @unique
  email    String   @unique
  password String
  votes    Vote[]
  Post     Post[]
  Answer   Answer[]
  examId   String?
}

model Post {
  id       String    @id @default(uuid())
  author   User      @relation(fields: [authorId], references: [id])
  authorId String
  Question Question?
  Comment  Comment?
  parent   Post?     @relation("Parent", fields: [parentId], references: [id])
  parentId String?
  children Post[]    @relation("Parent")
  content  String
  Vote     Vote[]
  Answer   Answer[]
  Exam     Exam[]
}

model Answer {
  id         String    @id @default(uuid())
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
  examId     String?
  Comment    Comment[]
  Question   Question? @relation(fields: [questionId], references: [id])
  questionId String?
  post       Post      @relation(fields: [postId], references: [id])
  postId     String
}

model Comment {
  id       String  @id @default(uuid())
  Answer   Answer? @relation(fields: [answerId], references: [id])
  answerId String?
  post     Post    @relation(fields: [postId], references: [id])
  postId   String  @unique
}

model Question {
  id       String   @id @default(uuid())
  exam     Exam     @relation(fields: [examId], references: [id])
  examId   String
  post     Post     @relation(fields: [postId], references: [id])
  postId   String   @unique
  answerId String?
  Answer   Answer[]
}

model Vote {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String
}

model Exam {
  id        String     @id @default(uuid())
  questions Question[]
  post      Post       @relation(fields: [postId], references: [id])
  postId    String
}

model BlackListToken {
  id     String  @id @default(uuid())
  token  String
  userId String?
}
